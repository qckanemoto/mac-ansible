- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    apache:
      user: ttskch
      document_root: /Users/ttskch/ghq
    dotfiles:
      clone_command: "ghq get ttskch/dotfiles"
      symlink_command: "cd ~/ghq/github.com/ttskch/dotfiles && cp .zsh/secret.zsh.placeholder .zsh/secret.zsh && sh symlink.sh"
      zsh:
        insecure_directories:
          - /usr/local/share/zsh
          - /usr/local/share/zsh/site-functions

    homebrew_packages:
      - { name: ansible }
      - { name: antiword }
      - { name: awscli }
      - { name: bat }
      - { name: colordiff }
      - { name: composer }
      - { name: coreutils }
      - { name: deployer }
      - { name: diff-so-fancy }
      - { name: docker-clean }
      - { name: exiftool }
      - { name: figlet }
      - { name: ffmpeg }
      - { name: git }
      - { name: ghq }
      - { name: gnu-sed }
      - { name: graphviz }
      - { name: heroku/brew/heroku }
      - { name: highlight }
      - { name: htop-osx }
      - { name: httpd }
      - { name: hub }
      - { name: itchyny/tap/mmv }
      - { name: imagemagick }
      - { name: iproute2mac }
      - { name: jq }
      - { name: lastpass-cli }
      - { name: mas }
      - { name: mongodb/brew/mongodb-community }
      - { name: nkf }
      - { name: nodebrew }
      - { name: openssl }
      - { name: p7zip }
      - { name: packer }
      - { name: pandoc }
      - { name: peco }
      - { name: phpunit }
      - { name: python }
      - { name: rails-completion }
      - { name: reattach-to-user-namespace }
      - { name: redis }
      - { name: rename }
      - { name: rbenv }
      - { name: ruby-build }
      - { name: sbt }
      - { name: scala }
      - { name: sendemail }
      - { name: sl }
      - { name: sqlite }
      - { name: ssh-copy-id }
      - { name: telnet }
      - { name: tig }
      - { name: tmux }
      - { name: tree }
      - { name: unrar }
      - { name: wget }
      - { name: youtube-dl }
      # required from phpenv and php-build
      # see also https://blog.ttskch.com/mac-phpenv-nodebrew/
      - { name: bison }
      - { name: bzip2 }
      - { name: curl }
      - { name: icu4c }
      - { name: krb5 }
      - { name: libedit }
      - { name: libiconv }
      - { name: libmcrypt }
      - { name: libxml2 }
      - { name: libzip }
      - { name: oniguruma }
      - { name: openssl@1.1 }
      - { name: pkg-config }
      - { name: re2c }
      - { name: zlib }
      # to pecl install amqp
      # see also https://stackoverflow.com/questions/51818515/installing-amqp-on-mac-with-brew#answer-52832365
      - { name: rabbitmq-c }
      # mysql (order is important)
      - { name: mysql@5.7 } # v5.7 formatted /usr/local/etc/my.cnf will be created
      - { name: mysql } # v8 formatted /usr/local/etc/my.cnf.default (instead of my.cnf) will be created
      - { name: mysql, state: unlinked }
      - { name: mysql@5.7, state: linked } # uses /usr/local/etc/my.cnf by default

    homebrew_cask_packages:
      - adobe-creative-cloud
      - alfred
      - android-studio
      - appcleaner
      - atom
      - avast-security
      - bitbar
      - caffeine
      - camunda-modeler
      - charles
      - cloudapp
      - dash
      - discord
      - docker
      - dropbox
      - eclipse-java
      - firefox
      - flash-player
      - flic
      - fujitsu-scansnap-home
      - gitup
      - google-backup-and-sync
      - google-chrome
      - google-drive-file-stream
      - grammarly
      - gyazo
      - handbrake
      - intellij-idea-ce
      - insomnia
      - java
      - kindle
      - krisp
      - libreoffice
      - ngrok
      - notion
      - obs
      - parsehub
      - phpstorm
      - qr-journal
      - reaper
      - rectangle
      - ripit
      - sequel-ace
      - slack
      - slowquitapps
      - skitch
      - skype
      - soundflower
      - toggl-track
      - tor-browser
      - transmit
      - transmission
      - typora
      - vagrant
      - virtualbox
      - virtualbox-extension-pack
      - visual-studio-code
      - vlc
      - wireshark
      - xmind
      - zoomus
      # quicklook related
      - qlstephen
      - qlcolorcode
      - qlmarkdown
      - qlimagesize
      - betterzip
      - quicklook-csv
      - quicklook-json

    mas_packages:
      - { name: iPic, id: 1101244278 }
      - { name: Xcode, id: 497799835 }
      - { name: "Final Cut Pro", id: 424389933 }
      - { name: Keynote, id: 409183694 }
      - { name: iMovie, id: 408981434 }
      - { name: "WinArchiver Lite", id: 414855915 }
      - { name: "Tomato One", id: 907364780 }
      - { name: Motion, id: 434290957 }
      - { name: "Memory Clean", id: 451444120 }
      - { name: iText, id: 1314980676 }
      - { name: LINE, id: 539883307 }
      - { name: GarageBand, id: 682658836 }
      - { name: LadioCast, id: 411213048 }

    composer_packages:
      - { name: "psy/psysh" }

    node_installations:
      - version: v12
        active: yes
      - version: v13
        active: no

    npm_packages:
      - { name: "@angular/cli" }
      - { name: "@google/clasp" }
      - { name: bower }
      - { name: coffee-script }
      - { name: firebase-tools }
      - { name: git-cz }
      - { name: grunt-cli }
      - { name: gulp }
      - { name: hubot }
      - { name: karma }
      - { name: less }
      - { name: localtunnel }
      - { name: nativefier }
      - { name: netlify-cli }
      - { name: npm-check-updates }
      - { name: typescript }
      - { name: typings }
      - { name: vercel }
      - { name: yarn }

  tasks:
    # brew update
    - name: update homebrew
      homebrew: update_homebrew=yes
      tags:
        - brew

    # brew install
    - name: install homebrew packages
      homebrew: name="{{ item.name }}" state="{{ item.state|default('latest') }}" install_options="{{ item.install_options|default() }}"
      with_items: "{{ homebrew_packages }}"
      tags:
        - brew
    - name: symlink python3 as python
      file:
        src: /usr/local/opt/python/bin/python3
        dest: /usr/local/bin/python
        state: link
      tags:
        - brew
        - tmp

    # brew cask install
    - name: install homebrew cask packages
      homebrew_cask: name="{{ item }}" state=present
      with_items: "{{ homebrew_cask_packages }}"
      ignore_errors: yes
      tags:
        - cask

    # mas install
    - name: install mas (App Store) packages
      shell: mas install "{{ item.id }}"
      with_items: "{{ mas_packages }}"
      register: ret
      changed_when: '"already installed" not in ret.stdout'
      tags:
        - mas

    # mas upgrade
    - name: upgrade all mas (App Store) packages
      shell: mas upgrade
      register: ret
      changed_when: '"Everything is up-to-date" not in ret.stdout'
      tags:
        - mas

    # install dotfiles
    - name: install zinit
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)"
      args:
        creates: ~/.zinit
      tags:
        - dotfiles
    - name: git clone dotfiles
      shell: "{{ dotfiles.clone_command }}"
      register: ret
      changed_when: 'ret.rc != 0 or "exists" not in ret.stderr'
      tags:
        - dotfiles
    - name: symlink dotfiles
      shell: "{{ dotfiles.symlink_command }}"
      tags:
        - dotfiles
    - name: reload dotfiles
      shell: source ~/.zshrc
      tags:
        - dotfiles
    - name: resolve zsh insecure directories alert
      file:
        path: "{{ item }}"
        recurse: yes
        mode: '0755'
      with_items: "{{ dotfiles.zsh.insecure_directories }}"
      tags:
        - dotfiles

    # tmux plugins
    - name: install tmux plugin manager
      git: repo=git://github.com/tmux-plugins/tpm dest=~/.tmux/plugins/tpm
      tags:
        - tmux

    # install phpenv
    - name: instal phpenv
      git: repo=git://github.com/phpenv/phpenv.git dest=~/.phpenv
      tags:
        - php
        - phpenv
    - name: install php-build
      git: repo=git://github.com/php-build/php-build.git dest=~/.phpenv/plugins/php-build
      tags:
        - php
        - phpenv

    # composer global install
    - name: install composer packages
      composer: command=require global_command=yes arguments="{{ item.name }}"
      with_items: "{{ composer_packages }}"
      tags:
        - php
        - composer

    # install symfony/cli
    - name: install symfony/cli
      shell: curl -sS https://get.symfony.com/cli/installer | bash
      tags:
        - php
        - symfony

    # install node via nodebrew
    - name: nodebrew setup
      shell: nodebrew setup
      args:
        creates: ~/.nodebrew
      tags:
        - node
        - npm
    - name: install node via nodebrew
      shell: nodebrew install {{ item.version }}
      args:
        creates: "~/.nodebrew/node/{{ item.version }}*"
      with_items: "{{ node_installations }}"
      tags:
        - node
        - npm
    - name: activate specified node
      shell: nodebrew use {{ item.version }}
      with_items: "{{ node_installations }}"
      when: item.active
      tags:
        - node
        - npm

    # npm -g install
    - name: install npm packages
      npm: name="{{ item.name }}" state="{{ item.state|default('latest') }}" version="{{ item.version|default() }}" global=yes
      with_items: "{{ npm_packages }}"
      tags:
        - npm

    # configure mysql
    - name: chown mysql directory
      file: path=/usr/local/var/mysql owner=_mysql group=_mysql recurse=yes
      become: yes
      become_method: sudo
      tags:
        - mysql
